version: "0.6"
description: "YouTube transcript analysis – robust JSON passing, no structured-output traps"
runtime: "langgraph"

llms:
  model_extract:
    type: openai
    model_name: gpt-4o-mini
    temperature: 0.2
    params:
      max_tokens: 800

  model_concept:
    type: openai
    model_name: gpt-4.1-mini
    temperature: 0.4
    params:
      max_tokens: 12000

  model_analysis:
    type: openai
    model_name: gpt-4.1-mini
    temperature: 0.55
    params:
      max_tokens: 16000

retrievers: {}
memory: {}
functions: {}

workflow:
  type: custom_graph

  nodes:
    # 1 ▸ Extract YouTube URL
    - id: extract_url
      kind: agent
      ref: model_extract
      config:
        prompt: |
          You are a URL-extraction specialist.
          Identify exactly one valid YouTube URL in the user input.

          USER INPUT:
          {input}

          ▼ OUTPUT (no prose)
          {"youtube_url":"COMPLETE_URL_HERE"}
          —or—
          {"error":"No YouTube URL found in the provided input"}
      output_key: url_extraction

    # 2 ▸ Get transcript via MCP
    - id: get_transcript
      kind: mcp
      config:
        server:
          command: ["python", "mcp/youtube-transcript/server.py"]
        tool: "extract_transcript"
        parameters:
          url: "${state.json.youtube_url}"
          language: "en"
      output_key: transcript_data

    # 3 ▸ Identify concepts
    - id: concept_identification
      kind: agent
      ref: model_concept
      config:
        prompt: |
          You are a **concept-identification expert**.

          CONTEXT
          • Video URL: {state.json.youtube_url}
          • Full transcript: {state.transcript_data}

          TASK
          1. Read the entire transcript.
          2. List every distinct concept, technique, argument, story or datum.
          3. Provide up to three verbatim quote excerpts (≤ 80 words each) and any timestamps.

          ▼ OUTPUT (single JSON object; no markdown, no commentary)
          {
            "total_concepts": 0,
            "concepts": [
              {
                "name": "",
                "category": "",
                "context": "",
                "key_details": "",
                "verbatim_quotes": [""],
                "significance": "",
                "timestamp_references": ""
              }
            ]
          }
      output_key: concept_analysis

    # 4 ▸ Produce detailed markdown analysis
    - id: detailed_analysis
      kind: agent
      ref: model_analysis
      config:
        prompt: |
          You are an expert content analyst.

          • Video URL: {state.json.youtube_url}
          • Transcript: {state.transcript_data}
          • Concept JSON: {output}

          Create an in-depth markdown report:

          # YouTube Video Analysis – *Add title*

          **Video URL:** {state.json.youtube_url}  
          **Analysis Date:** {{date:%Y-%m-%d}}

          ## Executive Summary
          (3–4 paragraphs)

          ## Detailed Concept Analysis
          For every concept:

          ### {{name}}
          **Category:** {{category}}  
          **Context:** {{context}}

          **Explanation** – merge key_details with inline `>` quotes from verbatim_quotes.  
          **Insights** – bullet list.  
          **Practical Uses** – actionable points.  
          **Evidence / Examples** – supporting data or anecdotes.  
          **Timestamps:** {{timestamp_references}}

          ---

          ## Interconnected Themes
          Explain relationships among concepts.

          ## Actionable Intelligence
          Immediate / Short-term / Long-term actions.

          ## Critical Evaluation
          Strengths • Limitations • Wider context.

          ## Comprehensive Summary
          4–5 paragraphs weaving everything together.

          ---
          **Methodology:** concept extraction → quote-rich synthesis.
      stop: true

  edges:
    - source: extract_url
      target: get_transcript
    - source: get_transcript
      target: concept_identification
    - source: concept_identification
      target: detailed_analysis

